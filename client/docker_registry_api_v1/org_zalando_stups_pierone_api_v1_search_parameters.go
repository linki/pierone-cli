package docker_registry_api_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewOrgZalandoStupsPieroneAPIV1SearchParams creates a new OrgZalandoStupsPieroneAPIV1SearchParams object
// with the default values initialized.
func NewOrgZalandoStupsPieroneAPIV1SearchParams() *OrgZalandoStupsPieroneAPIV1SearchParams {
	var ()
	return &OrgZalandoStupsPieroneAPIV1SearchParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewOrgZalandoStupsPieroneAPIV1SearchParamsWithTimeout creates a new OrgZalandoStupsPieroneAPIV1SearchParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewOrgZalandoStupsPieroneAPIV1SearchParamsWithTimeout(timeout time.Duration) *OrgZalandoStupsPieroneAPIV1SearchParams {
	var ()
	return &OrgZalandoStupsPieroneAPIV1SearchParams{

		timeout: timeout,
	}
}

/*OrgZalandoStupsPieroneAPIV1SearchParams contains all the parameters to send to the API endpoint
for the org zalando stups pierone api v1 search operation typically these are written to a http.Request
*/
type OrgZalandoStupsPieroneAPIV1SearchParams struct {

	/*Q
	  Search string to match repository names

	*/
	Q *string

	timeout time.Duration
}

// WithQ adds the q to the org zalando stups pierone api v1 search params
func (o *OrgZalandoStupsPieroneAPIV1SearchParams) WithQ(q *string) *OrgZalandoStupsPieroneAPIV1SearchParams {
	o.Q = q
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *OrgZalandoStupsPieroneAPIV1SearchParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.Q != nil {

		// query param q
		var qrQ string
		if o.Q != nil {
			qrQ = *o.Q
		}
		qQ := qrQ
		if qQ != "" {
			if err := r.SetQueryParam("q", qQ); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
