package pier_one_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new pier one api API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for pier one api API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
OrgZalandoStupsPieroneAPIGetOverallStats gets usage statistics independent of teams

Get usage statistics independent of teams
*/
func (a *Client) OrgZalandoStupsPieroneAPIGetOverallStats(params *OrgZalandoStupsPieroneAPIGetOverallStatsParams, authInfo runtime.ClientAuthInfoWriter) (*OrgZalandoStupsPieroneAPIGetOverallStatsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrgZalandoStupsPieroneAPIGetOverallStatsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "org.zalando.stups.pierone.api/get-overall-stats",
		Method:             "GET",
		PathPattern:        "/stats",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OrgZalandoStupsPieroneAPIGetOverallStatsReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*OrgZalandoStupsPieroneAPIGetOverallStatsOK), nil
}

/*
OrgZalandoStupsPieroneAPIGetScmSource gets scm source json

Get artifact's SCM source information (e.g. GIT commit)
*/
func (a *Client) OrgZalandoStupsPieroneAPIGetScmSource(params *OrgZalandoStupsPieroneAPIGetScmSourceParams, authInfo runtime.ClientAuthInfoWriter) (*OrgZalandoStupsPieroneAPIGetScmSourceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrgZalandoStupsPieroneAPIGetScmSourceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "org.zalando.stups.pierone.api/get-scm-source",
		Method:             "GET",
		PathPattern:        "/teams/{team}/artifacts/{artifact}/tags/{tag}/scm-source",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OrgZalandoStupsPieroneAPIGetScmSourceReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*OrgZalandoStupsPieroneAPIGetScmSourceOK), nil
}

/*
OrgZalandoStupsPieroneAPIGetTeamStats gets usage statistics for a team

Get usage statistics for a team
*/
func (a *Client) OrgZalandoStupsPieroneAPIGetTeamStats(params *OrgZalandoStupsPieroneAPIGetTeamStatsParams, authInfo runtime.ClientAuthInfoWriter) (*OrgZalandoStupsPieroneAPIGetTeamStatsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrgZalandoStupsPieroneAPIGetTeamStatsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "org.zalando.stups.pierone.api/get-team-stats",
		Method:             "GET",
		PathPattern:        "/stats/teams/{team}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OrgZalandoStupsPieroneAPIGetTeamStatsReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*OrgZalandoStupsPieroneAPIGetTeamStatsOK), nil
}

/*
OrgZalandoStupsPieroneAPIGetTeamsStats gets statistics for all teams

Get statistics for all teams
*/
func (a *Client) OrgZalandoStupsPieroneAPIGetTeamsStats(params *OrgZalandoStupsPieroneAPIGetTeamsStatsParams, authInfo runtime.ClientAuthInfoWriter) (*OrgZalandoStupsPieroneAPIGetTeamsStatsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrgZalandoStupsPieroneAPIGetTeamsStatsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "org.zalando.stups.pierone.api/get-teams-stats",
		Method:             "GET",
		PathPattern:        "/stats/teams",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OrgZalandoStupsPieroneAPIGetTeamsStatsReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*OrgZalandoStupsPieroneAPIGetTeamsStatsOK), nil
}

/*
OrgZalandoStupsPieroneAPIListTagsForImage lists tags for image

Lists tags that point to this image
*/
func (a *Client) OrgZalandoStupsPieroneAPIListTagsForImage(params *OrgZalandoStupsPieroneAPIListTagsForImageParams, authInfo runtime.ClientAuthInfoWriter) (*OrgZalandoStupsPieroneAPIListTagsForImageOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrgZalandoStupsPieroneAPIListTagsForImageParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "org.zalando.stups.pierone.api/list-tags-for-image",
		Method:             "GET",
		PathPattern:        "/tags/{image}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OrgZalandoStupsPieroneAPIListTagsForImageReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*OrgZalandoStupsPieroneAPIListTagsForImageOK), nil
}

/*
OrgZalandoStupsPieroneAPIReadArtifacts lists artifacts

lists all artifacts of a team
*/
func (a *Client) OrgZalandoStupsPieroneAPIReadArtifacts(params *OrgZalandoStupsPieroneAPIReadArtifactsParams, authInfo runtime.ClientAuthInfoWriter) (*OrgZalandoStupsPieroneAPIReadArtifactsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrgZalandoStupsPieroneAPIReadArtifactsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "org.zalando.stups.pierone.api/read-artifacts",
		Method:             "GET",
		PathPattern:        "/teams/{team}/artifacts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OrgZalandoStupsPieroneAPIReadArtifactsReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*OrgZalandoStupsPieroneAPIReadArtifactsOK), nil
}

/*
OrgZalandoStupsPieroneAPIReadTags lists tags

Lists all tags of an artifact sorted by time (most recently pushed tag last).
*/
func (a *Client) OrgZalandoStupsPieroneAPIReadTags(params *OrgZalandoStupsPieroneAPIReadTagsParams, authInfo runtime.ClientAuthInfoWriter) (*OrgZalandoStupsPieroneAPIReadTagsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrgZalandoStupsPieroneAPIReadTagsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "org.zalando.stups.pierone.api/read-tags",
		Method:             "GET",
		PathPattern:        "/teams/{team}/artifacts/{artifact}/tags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OrgZalandoStupsPieroneAPIReadTagsReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*OrgZalandoStupsPieroneAPIReadTagsOK), nil
}

/*
OrgZalandoStupsPieroneAPIReadTeams lists teams

lists all teams that have artifacts
*/
func (a *Client) OrgZalandoStupsPieroneAPIReadTeams(params *OrgZalandoStupsPieroneAPIReadTeamsParams, authInfo runtime.ClientAuthInfoWriter) (*OrgZalandoStupsPieroneAPIReadTeamsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrgZalandoStupsPieroneAPIReadTeamsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "org.zalando.stups.pierone.api/read-teams",
		Method:             "GET",
		PathPattern:        "/teams",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OrgZalandoStupsPieroneAPIReadTeamsReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*OrgZalandoStupsPieroneAPIReadTeamsOK), nil
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
