package docker_registry_api_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewOrgZalandoStupsPieroneAPIV2PutUploadParams creates a new OrgZalandoStupsPieroneAPIV2PutUploadParams object
// with the default values initialized.
func NewOrgZalandoStupsPieroneAPIV2PutUploadParams() *OrgZalandoStupsPieroneAPIV2PutUploadParams {
	var ()
	return &OrgZalandoStupsPieroneAPIV2PutUploadParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewOrgZalandoStupsPieroneAPIV2PutUploadParamsWithTimeout creates a new OrgZalandoStupsPieroneAPIV2PutUploadParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewOrgZalandoStupsPieroneAPIV2PutUploadParamsWithTimeout(timeout time.Duration) *OrgZalandoStupsPieroneAPIV2PutUploadParams {
	var ()
	return &OrgZalandoStupsPieroneAPIV2PutUploadParams{

		timeout: timeout,
	}
}

/*OrgZalandoStupsPieroneAPIV2PutUploadParams contains all the parameters to send to the API endpoint
for the org zalando stups pierone api v2 put upload operation typically these are written to a http.Request
*/
type OrgZalandoStupsPieroneAPIV2PutUploadParams struct {

	/*Artifact*/
	Artifact string
	/*Data*/
	Data interface{}
	/*Digest*/
	Digest string
	/*Team*/
	Team string
	/*UUID
	  Upload UUID as described on https://docs.docker.com/registry/spec/api/#pushing-an-image

	*/
	UUID string

	timeout time.Duration
}

// WithArtifact adds the artifact to the org zalando stups pierone api v2 put upload params
func (o *OrgZalandoStupsPieroneAPIV2PutUploadParams) WithArtifact(artifact string) *OrgZalandoStupsPieroneAPIV2PutUploadParams {
	o.Artifact = artifact
	return o
}

// WithData adds the data to the org zalando stups pierone api v2 put upload params
func (o *OrgZalandoStupsPieroneAPIV2PutUploadParams) WithData(data interface{}) *OrgZalandoStupsPieroneAPIV2PutUploadParams {
	o.Data = data
	return o
}

// WithDigest adds the digest to the org zalando stups pierone api v2 put upload params
func (o *OrgZalandoStupsPieroneAPIV2PutUploadParams) WithDigest(digest string) *OrgZalandoStupsPieroneAPIV2PutUploadParams {
	o.Digest = digest
	return o
}

// WithTeam adds the team to the org zalando stups pierone api v2 put upload params
func (o *OrgZalandoStupsPieroneAPIV2PutUploadParams) WithTeam(team string) *OrgZalandoStupsPieroneAPIV2PutUploadParams {
	o.Team = team
	return o
}

// WithUUID adds the uuid to the org zalando stups pierone api v2 put upload params
func (o *OrgZalandoStupsPieroneAPIV2PutUploadParams) WithUUID(uuid string) *OrgZalandoStupsPieroneAPIV2PutUploadParams {
	o.UUID = uuid
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *OrgZalandoStupsPieroneAPIV2PutUploadParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param artifact
	if err := r.SetPathParam("artifact", o.Artifact); err != nil {
		return err
	}

	if err := r.SetBodyParam(o.Data); err != nil {
		return err
	}

	// query param digest
	qrDigest := o.Digest
	qDigest := qrDigest
	if qDigest != "" {
		if err := r.SetQueryParam("digest", qDigest); err != nil {
			return err
		}
	}

	// path param team
	if err := r.SetPathParam("team", o.Team); err != nil {
		return err
	}

	// path param uuid
	if err := r.SetPathParam("uuid", o.UUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
